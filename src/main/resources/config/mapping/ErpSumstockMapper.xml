<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yidu.dao.ErpSumstockMapper" >
  <resultMap id="BaseResultMap" type="com.yidu.model.ErpSumstock" >
    <id column="STOCK_ID" property="stockId" jdbcType="VARCHAR" />
    <result column="ANNEX_ID" property="annexId" jdbcType="VARCHAR" />
    <result column="STOCK_SREIAL" property="stockSreial" jdbcType="VARCHAR" />
    <result column="KIN_ID" property="kinId" jdbcType="VARCHAR" />
    <result column="sta_id" property="staId" jdbcType="VARCHAR" />
    <result column="STOCK_SUOUNT" property="stockSuount" jdbcType="INTEGER" />
    <result column="CREATETIME" property="createtime" jdbcType="VARCHAR" />
    <result column="CREATER" property="creater" jdbcType="VARCHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="ISVA" property="isva" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    STOCK_ID, ANNEX_ID, STOCK_SREIAL, KIN_ID, sta_id, STOCK_SUOUNT, CREATETIME, CREATER, 
    REMARK, ISVA
  </sql>
  
    <!-- 根据条形码和当前分店查询药品 -->
  <select id="findByKinBarcode" resultType="map">
    SELECT ek.*,es.STOCK_SUOUNT FROM erp_annex AS ea,erp_sumstock AS es,erp_kinds AS ek WHERE ea.ANNEX_ID=es.ANNEX_ID AND 
es.KIN_ID=ek.KIN_ID AND ek.KIN_BARCODE=#{0} AND ea.ANNEX_ID=#{1}
  </select>
  
  <!-- 批量减少库存(根据分店ID和商品ID减少) -->
  <update id="updateStockSuount"  parameterType="java.util.List">  
    <foreach collection="list" item="item" index="index" open="" close="" separator=";">
        update erp_sumstock set
            STOCK_SUOUNT=STOCK_SUOUNT-${item.kmpNum} 
        where ANNEX_ID = #{item.annexId} and KIN_ID = #{item.kinId}
    </foreach>      
  </update>
  <!-- 查询今天最大的编号 -->
  <select id="selectSerial" resultType="java.lang.String" parameterType="java.lang.String">
		select STOCK_SREIAL from ERP_SUMSTOCK where STOCK_SREIAL like
		concat(concat('%', #{date}), '%') ORDER BY CREATETIME DESC LIMIT 1;
	</select>
  
  <!-- 根据ID查询 -->
  <select id="selectshow" resultMap="BaseResultMap" parameterType="String">
  	select * from ERP_SUMSTOCK where STOCK_ID=#{stockId}
  </select>
  <!-- 根据商品id 分店id 查询库存 -->
   <select id="selectKindAnn" resultMap="BaseResultMap" parameterType="String">
  		SELECT * FROM erp_sumstock s WHERE s.KIN_ID =#{0}  AND s.ANNEX_ID=#{1}
  </select>
  
  <!-- 查询所有 -->
  <select id="selectByPrimaryKey" resultType="map" parameterType="map" >
   SELECT * FROM ERP_SUMSTOCK sto,ERP_ANNEX nex,ERP_KINDS kin
   <where>
   	sto.ANNEX_ID=nex.ANNEX_ID
   	AND sto.KIN_ID=kin.KIN_ID
   	<if test="key != null and key !=''">
  		 and ( 
  		 	sto.STOCK_SUOUNT like CONCAT('%',#{key},'%' )
  		 	or
  		 	kin.KIN_SERIAL like CONCAT('%',#{key},'%' )
  		 	or
  		 	kin.KIN_BARCODE like CONCAT('%',#{key},'%' )
  		  )
  	</if>
  	<if test="staff != null and staff!=''">
  		and nex.ANNEX_ID like CONCAT('%',#{staff},'%' )
  	</if>
  	<if test="annexName != null and annexName!=''">
  		and nex.ANNEX_ID like CONCAT('%',#{annexName},'%' )
  	</if>
  	<if test="kinName != null and kinName!=''">
  		and kin.KIN_ID like CONCAT('%',#{kinName},'%' )
  	</if>
   	AND sto.ISVA=1
  	AND nex.isva=1
   	and kin.isva=1
   </where>
   	limit #{page},#{limit}
  </select>
  
  
  <!-- 总行数 -->
   <select id="findRowCount" parameterType="map" resultType="int" >
    select COUNT(*) from ERP_SUMSTOCK sto,ERP_ANNEX nex,ERP_KINDS kin
     <where>
   	sto.ANNEX_ID=nex.ANNEX_ID
   	AND sto.KIN_ID=kin.KIN_ID
   	<if test="key != null and key !=''">
  		 and ( 
  		 	sto.STOCK_SUOUNT like CONCAT('%',#{key},'%' )
  		 	or
  		 	kin.KIN_SERIAL like CONCAT('%',#{key},'%' )
  		 	or
  		 	kin.KIN_BARCODE like CONCAT('%',#{key},'%' )
  		  )
  	</if>
  	<if test="staff != null and staff!=''">
  		and nex.ANNEX_ID like CONCAT('%',#{staff},'%' )
  	</if>
  	<if test="annexName != null and annexName!=''">
  		and nex.ANNEX_ID like CONCAT('%',#{annexName},'%' )
  	</if>
  	<if test="kinName != null and kinName!=''">
  		and kin.KIN_ID like CONCAT('%',#{kinName},'%' )
  	</if>
   	AND sto.ISVA=1
  	AND nex.isva=1
   	and kin.isva=1
   </where>
  </select>
  
  <!-- 修改或删除 -->
  <update id="updateByPrimaryKeySelective" parameterType="com.yidu.model.ErpSumstock" >
    update erp_sumstock
    <set >
      <if test="annexId != null" >
        ANNEX_ID = #{annexId,jdbcType=VARCHAR},
      </if>
      <if test="stockSreial != null" >
        STOCK_SREIAL = #{stockSreial,jdbcType=VARCHAR},
      </if>
      <if test="kinId != null" >
        KIN_ID = #{kinId,jdbcType=VARCHAR},
      </if>
      <if test="staId != null" >
        sta_id = #{staId,jdbcType=VARCHAR},
      </if>
      <if test="stockSuount != null" >
        STOCK_SUOUNT = #{stockSuount,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        CREATETIME = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        CREATER = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isva != null" >
        ISVA = #{isva,jdbcType=INTEGER},
      </if>
    </set>
    where STOCK_ID = #{stockId,jdbcType=VARCHAR}
  </update>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from erp_sumstock
    where STOCK_ID = #{stockId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yidu.model.ErpSumstock" >
    insert into erp_sumstock (STOCK_ID, ANNEX_ID, STOCK_SREIAL, 
      KIN_ID, sta_id, STOCK_SUOUNT, 
      CREATETIME, CREATER, REMARK, 
      ISVA)
    values (#{stockId,jdbcType=VARCHAR}, #{annexId,jdbcType=VARCHAR}, #{stockSreial,jdbcType=VARCHAR}, 
      #{kinId,jdbcType=VARCHAR}, #{staId,jdbcType=VARCHAR}, #{stockSuount,jdbcType=INTEGER}, 
      #{createtime,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{isva,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yidu.model.ErpSumstock" >
  	<selectKey keyProperty="stockId" order="BEFORE" resultType="java.lang.String">
			select UUID()
	</selectKey>
    insert into erp_sumstock
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stockId != null" >
        STOCK_ID,
      </if>
      <if test="annexId != null" >
        ANNEX_ID,
      </if>
      <if test="stockSreial != null" >
        STOCK_SREIAL,
      </if>
      <if test="kinId != null" >
        KIN_ID,
      </if>
      <if test="staId != null" >
        sta_id,
      </if>
      <if test="stockSuount != null" >
        STOCK_SUOUNT,
      </if>
      <if test="createtime != null" >
        CREATETIME,
      </if>
      <if test="creater != null" >
        CREATER,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="isva != null" >
        ISVA,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stockId != null" >
        #{stockId,jdbcType=VARCHAR},
      </if>
      <if test="annexId != null" >
        #{annexId,jdbcType=VARCHAR},
      </if>
      <if test="stockSreial != null" >
        #{stockSreial,jdbcType=VARCHAR},
      </if>
      <if test="kinId != null" >
        #{kinId,jdbcType=VARCHAR},
      </if>
      <if test="staId != null" >
        #{staId,jdbcType=VARCHAR},
      </if>
      <if test="stockSuount != null" >
        #{stockSuount,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isva != null" >
        #{isva,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.yidu.model.ErpSumstock" >
    update erp_sumstock
    set ANNEX_ID = #{annexId,jdbcType=VARCHAR},
      STOCK_SREIAL = #{stockSreial,jdbcType=VARCHAR},
      KIN_ID = #{kinId,jdbcType=VARCHAR},
      sta_id = #{staId,jdbcType=VARCHAR},
      STOCK_SUOUNT = #{stockSuount,jdbcType=INTEGER},
      CREATETIME = #{createtime,jdbcType=VARCHAR},
      CREATER = #{creater,jdbcType=VARCHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      ISVA = #{isva,jdbcType=INTEGER}
    where STOCK_ID = #{stockId,jdbcType=VARCHAR}
  </update>
</mapper>