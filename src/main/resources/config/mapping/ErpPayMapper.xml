<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.yidu.dao.ErpPayMapper" >
  <resultMap id="BaseResultMap" type="com.yidu.model.ErpPay" >
    <id column="PAY_ID" property="payId" jdbcType="VARCHAR" />
    <result column="KINORD_ID" property="kinordId" jdbcType="VARCHAR" />
    <result column="FINANCE_ID" property="financeId" jdbcType="VARCHAR" />
    <result column="PAY_SERIAL" property="paySerial" jdbcType="VARCHAR" />
    <result column="PAY_ADD" property="payAdd" jdbcType="VARCHAR" />
    <result column="PAY_NAME" property="payName" jdbcType="VARCHAR" />
    <result column="PAY_NUM" property="payNum" jdbcType="DECIMAL" />
    <result column="CREATETIME" property="createtime" jdbcType="VARCHAR" />
    <result column="CREATER" property="creater" jdbcType="VARCHAR" />
    <result column="ISVA" property="isva" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    PAY_ID, KINORD_ID,FINANCE_ID, PAY_SERIAL, PAY_ADD, PAY_NAME, PAY_NUM, CREATETIME, CREATER
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from erp_pay
    where PAY_ID = #{payId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from erp_pay
    where PAY_ID = #{payId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.yidu.model.ErpPay" >
    insert into erp_pay (PAY_ID, KINORD_ID, PAY_SERIAL, 
      PAY_ADD, PAY_NAME, PAY_NUM, 
      CREATETIME, CREATER)
    values (#{payId,jdbcType=VARCHAR}, #{kinordId,jdbcType=VARCHAR}, #{paySerial,jdbcType=VARCHAR}, 
      #{payAdd,jdbcType=VARCHAR}, #{payName,jdbcType=VARCHAR}, #{payNum,jdbcType=DECIMAL}, 
      #{createtime,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.yidu.model.ErpPay" >
    insert into erp_pay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="payId != null" >
        PAY_ID,
      </if>
      <if test="kinordId != null" >
        KINORD_ID,
      </if>
      <if test="financeId != null" >
        FINANCE_ID,
      </if>
      <if test="paySerial != null" >
        PAY_SERIAL,
      </if>
      <if test="payAdd != null" >
        PAY_ADD,
      </if>
      <if test="payName != null" >
        PAY_NAME,
      </if>
      <if test="payNum != null" >
        PAY_NUM,
      </if>
      <if test="createtime != null" >
        CREATETIME,
      </if>
      <if test="creater != null" >
        CREATER,
      </if>
      <if test="isva != null" >
        ISVA,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="payId != null" >
        #{payId,jdbcType=VARCHAR},
      </if>
      <if test="kinordId != null" >
        #{kinordId,jdbcType=VARCHAR},
      </if>
      <if test="financeId != null" >
        #{financeId,jdbcType=VARCHAR},
      </if>
      <if test="paySerial != null" >
        #{paySerial,jdbcType=VARCHAR},
      </if>
      <if test="payAdd != null" >
        #{payAdd,jdbcType=VARCHAR},
      </if>
      <if test="payName != null" >
        #{payName,jdbcType=VARCHAR},
      </if>
      <if test="payNum != null" >
        #{payNum,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="isva != null" >
        #{isva,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.yidu.model.ErpPay" >
    update erp_pay
    <set >
      <if test="kinordId != null" >
        KINORD_ID = #{kinordId,jdbcType=VARCHAR},
      </if>
      <if test="paySerial != null" >
        PAY_SERIAL = #{paySerial,jdbcType=VARCHAR},
      </if>
      <if test="payAdd != null" >
        PAY_ADD = #{payAdd,jdbcType=VARCHAR},
      </if>
      <if test="payName != null" >
        PAY_NAME = #{payName,jdbcType=VARCHAR},
      </if>
      <if test="payNum != null" >
        PAY_NUM = #{payNum,jdbcType=DECIMAL},
      </if>
      <if test="createtime != null" >
        CREATETIME = #{createtime,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        CREATER = #{creater,jdbcType=VARCHAR},
      </if>
    </set>
    where PAY_ID = #{payId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yidu.model.ErpPay" >
    update erp_pay
    set KINORD_ID = #{kinordId,jdbcType=VARCHAR},
      PAY_SERIAL = #{paySerial,jdbcType=VARCHAR},
      PAY_ADD = #{payAdd,jdbcType=VARCHAR},
      PAY_NAME = #{payName,jdbcType=VARCHAR},
      PAY_NUM = #{payNum,jdbcType=DECIMAL},
      CREATETIME = #{createtime,jdbcType=VARCHAR},
      CREATER = #{creater,jdbcType=VARCHAR}
    where PAY_ID = #{payId,jdbcType=VARCHAR}
  </update>
  <select id="paySerial" resultType="java.lang.String" parameterType="java.lang.String">
  	select pay_serial from erp_pay where pay_serial like
  	concat(concat('%'#{date},'%')) order by createtime desc limit 1;
  </select>
  <select id="findDimFinance" resultMap="BaseResultMap" parameterType="Map">
  		select
  		<include refid="Base_Column_List" />
  		from erp_pay
  		<where>
  		<if test="pricer !=''">
  			(
  				createtime like concat('%'#{pricer},'%')
  				or
  				payNum like concat('%'#{pricer},'%')
  				or
  				create like concat('%'#{pricer},'%')
  			)
  		</if>
  		</where>
  		and isva =0;
  </select>
  
  <!-- 根据年份查询12月的收入金额 -->
  <select id="showListPrice" parameterType="String" resultMap="BaseResultMap">
  	 SELECT SUBSTRING(t.CREATETIME,6,2) AS createtime,SUM(t.PAY_NUM) AS payNum FROM ERP_pay t WHERE CREATETIME LIKE#{date} GROUP BY SUBSTRING(t.CREATETIME,6,2)
  </select>
  
  <!-- 模糊分页查询得到支出集合 -->
  <select id="showList" resultMap="BaseResultMap" parameterType="map">
  	select * from ERP_pay t where t.isva=1
  	<if test="keyWord !=null and keyWord !=''">
  		and (  
	  			t.PAY_SERIAL like #{keyWord}
	  			or t.PAY_NAME like #{keyWord}
  		    )
  	</if>
  	<if test="staTime !=null and staTime !=''">
  		and (t.PAY_ADD &gt;= #{staTime} and t.PAY_ADD &lt;= #{endTime})
  	</if>
  	
  	ORDER BY t.PAY_ADD DESC limit #{pages.firstRows},#{pages.maxResult}
  </select>

  <!-- 模糊查询得到支出行数 -->
  <select id="findCount" resultType="int" parameterType="map">
  	select count(*) from ERP_pay t where t.isva=1
  	<if test="keyWord !=null and keyWord !=''">
  		and (  
	  			t.PAY_SERIAL like #{keyWord}
	  			or t.PAY_NAME like #{keyWord}
  		    )
  	</if>
  	<if test="staTime !=null and staTime !=''">
  		and (t.PAY_ADD &gt;= #{staTime} and t.PAY_ADD &lt;= #{endTime})
  	</if>
  </select>
</mapper>